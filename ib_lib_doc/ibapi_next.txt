- [@stoqey/ib](https://stoqey.github.io/ib-doc/modules.html)
- [IBApiNext](https://stoqey.github.io/ib-doc/classes/IBApiNext.html)

# Class IBApiNext

Next-gen Typescript implementation of the Interactive Brokers TWS (or IB Gateway) API.

If you prefer to stay as close as possible to the official TWS API interfaces and functionality,
use \[\[IBApi\]\].

If you prefer to use an API that provides some more convenience functions, such as auto-reconnect
or RxJS Observables that stay functional during re-connect, use \[\[IBApiNext\]\].

\[\[IBApiNext\]\] does return RxJS Observables on most of the functions.
The first subscriber will send the request to TWS, while the last un-subscriber will cancel it.
Any subscriber in between will get a replay of the latest received value(s).
This is also the case if you call same function with same arguments multiple times (\[\[IBApiNext\]\]
will make sure that a similar subscription is not requested multiple times from TWS, but it will
become a new observers to the existing subscription).
In case of an error, a re-subscribe will send the TWS request again (it is fully compatible to RxJS
operators, e.g. retry or retryWhen).

Note that connection errors are not reported to the returned Observables as returned by get-functions,
but they will simply stop emitting values until TWS connection is re-established.
Use \[\[IBApiNext.connectState\]\] for observing the connection state.

#### Hierarchy

- IBApiNext

##### Index

### Constructors

[constructor](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#constructor)

### Properties

[\_nextReqId](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#_nextReqId) [api](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#api) [errorSubject](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#errorSubject) [getMarketDataSingle](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDataSingle) [logger](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#logger) [searchContracts](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#searchContracts) [subscriptions](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#subscriptions)

### Accessors

[connectionState](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#connectionState) [error](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#error) [isConnected](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#isConnected) [logLevel](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#logLevel)

### Methods

[cancelAllOrders](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#cancelAllOrders) [cancelOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#cancelOrder) [connect](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#connect) [disconnect](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#disconnect) [getAccountSummary](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAccountSummary) [getAccountUpdates](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAccountUpdates) [getAllOpenOrders](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAllOpenOrders) [getAutoOpenOrders](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAutoOpenOrders) [getCommissionReport](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getCommissionReport) [getContractDetails](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getContractDetails) [getCurrentTime](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getCurrentTime) [getExecutionDetails](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getExecutionDetails) [getHeadTimestamp](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHeadTimestamp) [getHistogramData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistogramData) [getHistoricalData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalData) [getHistoricalDataUpdates](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalDataUpdates) [getHistoricalTicksBidAsk](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksBidAsk) [getHistoricalTicksLast](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksLast) [getHistoricalTicksMid](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksMid) [getManagedAccounts](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getManagedAccounts) [getMarketData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketData) [getMarketDataSnapshot](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDataSnapshot) [getMarketDepth](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDepth) [getMarketDepthExchanges](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDepthExchanges) [getMarketScanner](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketScanner) [getMatchingSymbols](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMatchingSymbols) [getNextValidOrderId](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getNextValidOrderId) [getOpenOrders](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getOpenOrders) [getPnL](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPnL) [getPnLSingle](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPnLSingle) [getPositions](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPositions) [getScannerParameters](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getScannerParameters) [getSecDefOptParams](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getSecDefOptParams) [getUserInfo](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getUserInfo) [insertAtMapIndex](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#insertAtMapIndex) [modifyOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#modifyOrder) [onAccountDownloadEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountDownloadEnd) [onAccountSummary](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountSummary) [onAccountSummaryEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountSummaryEnd) [onComissionReport](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onComissionReport) [onContractDetails](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onContractDetails) [onContractDetailsEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onContractDetailsEnd) [onCurrentTime](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onCurrentTime) [onExecDetails](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onExecDetails) [onExecDetailsEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onExecDetailsEnd) [onHeadTimestamp](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHeadTimestamp) [onHistogramData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistogramData) [onHistoricalData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalData) [onHistoricalDataUpdate](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalDataUpdate) [onHistoricalTicks](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicks) [onHistoricalTicksBidAsk](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicksBidAsk) [onHistoricalTicksLast](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicksLast) [onManagedAccts](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onManagedAccts) [onMktDepthExchanges](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onMktDepthExchanges) [onNextValidId](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onNextValidId) [onOpenOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrder) [onOpenOrderComplete](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrderComplete) [onOpenOrderEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrderEnd) [onOrderBound](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOrderBound) [onOrderStatus](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOrderStatus) [onPnL](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPnL) [onPnLSingle](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPnLSingle) [onPosition](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPosition) [onPositionEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPositionEnd) [onScannerData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerData) [onScannerDataEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerDataEnd) [onScannerParameters](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerParameters) [onSecurityDefinitionOptionParameter](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSecurityDefinitionOptionParameter) [onSecurityDefinitionOptionParameterEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSecurityDefinitionOptionParameterEnd) [onSymbolSamples](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSymbolSamples) [onTick](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTick) [onTickOptionComputation](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTickOptionComputation) [onTickSnapshotEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTickSnapshotEnd) [onUpdateAccountTime](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateAccountTime) [onUpdateAccountValue](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateAccountValue) [onUpdateMktDepth](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateMktDepth) [onUpdateMktDepthL2](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateMktDepthL2) [onUpdatePortfolio](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdatePortfolio) [onUserInfo](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUserInfo) [placeNewOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#placeNewOrder) [placeOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#placeOrder) [setMarketDataType](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#setMarketDataType)

## Constructors

### constructor [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#constructor)

- new IBApiNext(options?): [IBApiNext](https://stoqey.github.io/ib-doc/classes/IBApiNext.html) [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#constructor.new_IBApiNext)
- Create an \[\[IBApiNext\]\] object.





#### Parameters



- ##### `Optional` options: [IBApiNextCreationOptions](https://stoqey.github.io/ib-doc/interfaces/IBApiNextCreationOptions.html)




Creation options.


#### Returns [IBApiNext](https://stoqey.github.io/ib-doc/classes/IBApiNext.html)

## Properties

### `Private`\_nextReqId [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#_nextReqId)

\_nextReqId:number = 1

### `Private` `Readonly` api [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#api)

api:IBApiAutoConnection

The \[\[IBApi\]\] with auto-reconnect.

### `Readonly` errorSubject [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#errorSubject)

errorSubject:Subject< [IBApiNextError](https://stoqey.github.io/ib-doc/interfaces/IBApiNextError.html) > = ...

The IBApi error \[\[Subject\]\].

All errors from \[\[IBApi\]\] error events will be sent to this subject.

### getMarketDataSingle [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getMarketDataSingle)

getMarketDataSingle:((contract, genericTickList, regulatorySnapshot) =\> Promise<MutableMarketData>) = ...

#### Type declaration

- (contract, genericTickList, regulatorySnapshot): Promise<MutableMarketData>
- #### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)

- ##### genericTickList: string

- ##### regulatorySnapshot: boolean


#### Returns Promise<MutableMarketData>

#### Deprecated

please use getMarketDataSnapshot instead of getMarketDataSingle.

### `Readonly` logger [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#logger)

logger:IBApiNextLogger

The \[\[IBApiNextLogger\]\] instance.

### searchContracts [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#searchContracts)

searchContracts:((pattern) =\> Promise< [ContractDescription](https://stoqey.github.io/ib-doc/interfaces/ContractDescription.html)\[\]>) = ...

#### Type declaration

- (pattern): Promise< [ContractDescription](https://stoqey.github.io/ib-doc/interfaces/ContractDescription.html)\[\]>
- #### Parameters



- ##### pattern: string


#### Returns Promise< [ContractDescription](https://stoqey.github.io/ib-doc/interfaces/ContractDescription.html)\[\]>

#### Deprecated

use getMatchingSymbols instead

### `Private` `Readonly` subscriptions [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#subscriptions)

subscriptions:IBApiNextSubscriptionRegistry

The subscription registry.

## Accessors

### connectionState [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#connectionState)

- get connectionState(): Observable< [ConnectionState](https://stoqey.github.io/ib-doc/enums/ConnectionState.html) >
- Get an \[\[Observable\]\] for observing the connection-state.




#### Returns Observable< [ConnectionState](https://stoqey.github.io/ib-doc/enums/ConnectionState.html) >


### error [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#error)

- get error(): Observable< [IBApiNextError](https://stoqey.github.io/ib-doc/interfaces/IBApiNextError.html) >
- Get an \[\[Observable\]\] to receive errors on IB API.



Errors that have a valid request id, will additionally be sent to
the observers of the request.




#### Returns Observable< [IBApiNextError](https://stoqey.github.io/ib-doc/interfaces/IBApiNextError.html) >


### isConnected [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#isConnected)

- get isConnected(): boolean
- Returns true if currently connected, false otherwise.




#### Returns boolean


### logLevel [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#logLevel)

- get logLevel(): [LogLevel](https://stoqey.github.io/ib-doc/enums/LogLevel.html)
- Get the current log level.




#### Returns [LogLevel](https://stoqey.github.io/ib-doc/enums/LogLevel.html)

- set logLevel(level): void
- Set the current log level.





#### Parameters



- ##### level: [LogLevel](https://stoqey.github.io/ib-doc/enums/LogLevel.html)


#### Returns void

## Methods

### cancelAllOrders [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#cancelAllOrders)

- cancelAllOrders(): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#cancelAllOrders.cancelAllOrders-1)
- Cancels all active orders.
This method will cancel ALL open orders including those placed directly from TWS.




#### Returns void




#### See



\[\[cancelOrder\]\]


### cancelOrder [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#cancelOrder)

- cancelOrder(id): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#cancelOrder.cancelOrder-1)
- Cancels an active order placed by from the same API client ID.



Note: API clients cannot cancel individual orders placed by other clients.
Use \[\[cancelAllOrders\]\] instead.





#### Parameters



- ##### id: number




The order id.


#### Returns void

### connect [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#connect)

- connect(clientId?): [IBApiNext](https://stoqey.github.io/ib-doc/classes/IBApiNext.html) [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#connect.connect-1)
- Connect to the TWS or IB Gateway.





#### Parameters



- ##### `Optional` clientId: number




A fixed client id to be used on all connection
attempts. If not specified, the first connection will use the
default client id (0) and increment it with each re-connection
attempt.


#### Returns [IBApiNext](https://stoqey.github.io/ib-doc/classes/IBApiNext.html)

#### Sse

\[\[connectionState\]\] for observing the connection state.

### disconnect [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#disconnect)

- disconnect(): [IBApiNext](https://stoqey.github.io/ib-doc/classes/IBApiNext.html) [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#disconnect.disconnect-1)
- Disconnect from the TWS or IB Gateway.



Use \[\[connectionState\]\] for observing the connection state.




#### Returns [IBApiNext](https://stoqey.github.io/ib-doc/classes/IBApiNext.html)


### getAccountSummary [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getAccountSummary)

- getAccountSummary(group, tags): Observable< [AccountSummariesUpdate](https://stoqey.github.io/ib-doc/types/AccountSummariesUpdate.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAccountSummary.getAccountSummary-1)
- Create subscription to receive the account summaries of all linked accounts as presented in the TWS' Account Summary tab.



All account summaries are sent on the first event.
Use incrementalUpdates argument to switch between incremental or full update mode.
With incremental updates, only changed account summary values will be sent after the initial complete list.
Without incremental updates, the complete list of account summaries will be sent again if any value has changed.



[https://www.interactivebrokers.com/en/software/tws/accountwindowtop.htm](https://www.interactivebrokers.com/en/software/tws/accountwindowtop.htm)





#### Parameters



- ##### group: string




Set to "All" to return account summary data for all accounts,
or set to a specific Advisor Account Group name that has already been created in TWS Global Configuration.

- ##### tags: string




A comma separated list with the desired tags:



- AccountType — Identifies the IB account structure
- NetLiquidation — The basis for determining the price of the assets in your account. Total cash value + stock value + options value + bond value
- TotalCashValue — Total cash balance recognized at the time of trade + futures PNL
- SettledCash — Cash recognized at the time of settlement - purchases at the time of trade - commissions - taxes - fees
- AccruedCash — Total accrued cash value of stock, commodities and securities
- BuyingPower — Buying power serves as a measurement of the dollar value of securities that one may purchase in a securities account without depositing additional funds
- EquityWithLoanValue — Forms the basis for determining whether a client has the necessary assets to either initiate or maintain security positions. Cash + stocks + bonds + mutual funds
- PreviousDayEquityWithLoanValue — Marginable Equity with Loan value as of 16:00 ET the previous day
- GrossPositionValue — The sum of the absolute value of all stock and equity option positions
- RegTEquity — Regulation T equity for universal account
- RegTMargin — Regulation T margin for universal account
- SMA — Special Memorandum Account: Line of credit created when the market value of securities in a Regulation T account increase in value
- InitMarginReq — Initial Margin requirement of whole portfolio
- MaintMarginReq — Maintenance Margin requirement of whole portfolio
- AvailableFunds — This value tells what you have available for trading
- ExcessLiquidity — This value shows your margin cushion, before liquidation
- Cushion — Excess liquidity as a percentage of net liquidation value
- FullInitMarginReq — Initial Margin of whole portfolio with no discounts or intraday credits
- FullMaintMarginReq — Maintenance Margin of whole portfolio with no discounts or intraday credits
- FullAvailableFunds — Available funds of whole portfolio with no discounts or intraday credits
- FullExcessLiquidity — Excess liquidity of whole portfolio with no discounts or intraday credits
- LookAheadNextChange — Time when look-ahead values take effect
- LookAheadInitMarginReq — Initial Margin requirement of whole portfolio as of next period's margin change
- LookAheadMaintMarginReq — Maintenance Margin requirement of whole portfolio as of next period's margin change
- LookAheadAvailableFunds — This value reflects your available funds at the next margin change
- LookAheadExcessLiquidity — This value reflects your excess liquidity at the next margin change
- HighestSeverity — A measure of how close the account is to liquidation
- DayTradesRemaining — The Number of Open/Close trades a user could put on before Pattern Day Trading is detected. A value of "-1" means that the user can put on unlimited day trades.
- Leverage — GrossPositionValue / NetLiquidation
- $LEDGER — Single flag to relay all cash balance tags\*, only in base currency.
- $LEDGER:CURRENCY — Single flag to relay all cash balance tags\*, only in the specified currency.
- $LEDGER:ALL — Single flag to relay all cash balance tags\* in all currencies.

#### Returns Observable< [AccountSummariesUpdate](https://stoqey.github.io/ib-doc/types/AccountSummariesUpdate.html) >

### getAccountUpdates [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getAccountUpdates)

- getAccountUpdates(acctCode?): Observable< [AccountUpdatesUpdate](https://stoqey.github.io/ib-doc/types/AccountUpdatesUpdate.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAccountUpdates.getAccountUpdates-1)
- The getAccountUpdates function creates a subscription to the TWS through which account and portfolio information is delivered.
This information is the exact same as the one displayed within the TWS' Account Window.
In a single account structure, the account number is not necessary.
Just as with the TWS' Account Window, unless there is a position change this information is updated at a fixed interval of three minutes.





#### Parameters



- ##### `Optional` acctCode: string




the specific account to retrieve.


#### Returns Observable< [AccountUpdatesUpdate](https://stoqey.github.io/ib-doc/types/AccountUpdatesUpdate.html) >

#### See

\[\[reqAccountUpdates\]\], \[\[reqGlobalCancel\]\]

### getAllOpenOrders [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getAllOpenOrders)

- getAllOpenOrders(): Promise< [OpenOrder](https://stoqey.github.io/ib-doc/interfaces/OpenOrder.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAllOpenOrders.getAllOpenOrders-1)
- Requests all current open orders in associated accounts at the current moment.




#### Returns Promise< [OpenOrder](https://stoqey.github.io/ib-doc/interfaces/OpenOrder.html)\[\]>


### getAutoOpenOrders [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getAutoOpenOrders)

- getAutoOpenOrders(autoBind): Observable< [OpenOrdersUpdate](https://stoqey.github.io/ib-doc/types/OpenOrdersUpdate.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAutoOpenOrders.getAutoOpenOrders-1)
- Requests status updates AND (IB documentation not correct on this point) future orders placed from TWS. Can only be used with client ID 0.





#### Parameters



- ##### autoBind: boolean




if set to `true`, the newly created orders will be assigned an API order ID and implicitly
associated with this client. If set to \`false, future orders will not be.


#### Returns Observable< [OpenOrdersUpdate](https://stoqey.github.io/ib-doc/types/OpenOrdersUpdate.html) >

#### See

\[\[reqAllOpenOrders\]\], \[\[reqOpenOrders\]\], \[\[cancelOrder\]\], \[\[reqGlobalCancel\]\]

### getCommissionReport [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getCommissionReport)

- getCommissionReport(filter): Promise< [CommissionReport](https://stoqey.github.io/ib-doc/interfaces/CommissionReport.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getCommissionReport.getCommissionReport-1)
- Get commication reports details of all executed trades.





#### Parameters



- ##### filter: [ExecutionFilter](https://stoqey.github.io/ib-doc/interfaces/ExecutionFilter.html)




filter trade data on \[\[ExecutionFilter\]\]


#### Returns Promise< [CommissionReport](https://stoqey.github.io/ib-doc/interfaces/CommissionReport.html)\[\]>

### getContractDetails [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getContractDetails)

- getContractDetails(contract): Promise< [ContractDetails](https://stoqey.github.io/ib-doc/interfaces/ContractDetails.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getContractDetails.getContractDetails-1)
- Request contract information from TWS.
This method will provide all the contracts matching the contract provided.



It can also be used to retrieve complete options and futures chains.
Though it is now (in API version > 9.72.12) advised to use reqSecDefOptParams for that purpose.



This information will be emitted as contractDetails event.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The contract used as sample to query the available contracts.


#### Returns Promise< [ContractDetails](https://stoqey.github.io/ib-doc/interfaces/ContractDetails.html)\[\]>

### getCurrentTime [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getCurrentTime)

- getCurrentTime(): Promise<number> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getCurrentTime.getCurrentTime-1)
- Get TWS's current time.




#### Returns Promise<number>


### getExecutionDetails [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getExecutionDetails)

- getExecutionDetails(filter): Promise< [ExecutionDetail](https://stoqey.github.io/ib-doc/interfaces/ExecutionDetail.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getExecutionDetails.getExecutionDetails-1)
- Get execution details of all executed trades.





#### Parameters



- ##### filter: [ExecutionFilter](https://stoqey.github.io/ib-doc/interfaces/ExecutionFilter.html)




filter trade data on \[\[ExecutionFilter\]\]


#### Returns Promise< [ExecutionDetail](https://stoqey.github.io/ib-doc/interfaces/ExecutionDetail.html)\[\]>

### getHeadTimestamp [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getHeadTimestamp)

- getHeadTimestamp(contract, whatToShow, useRTH, formatDate): Promise<string> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHeadTimestamp.getHeadTimestamp-1)
- Get the timestamp of earliest available historical data for a contract and data type.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




\[\[Contract\]\] object for which head timestamp is being requested.

- ##### whatToShow: [WhatToShow](https://stoqey.github.io/ib-doc/variables/WhatToShow-1.html)




Type of data for head timestamp - "BID", "ASK", "TRADES", etc

- ##### useRTH: boolean




Use regular trading hours only, `true` for yes or `false` for no.

- ##### formatDate: number




Set to 1 to obtain the bars' time as yyyyMMdd HH:mm:ss, set to 2 to obtain it like system time format in seconds.


#### Returns Promise<string>

### getHistogramData [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getHistogramData)

- getHistogramData(contract, useRTH, duration, durationUnit): Promise< [HistogramEntry](https://stoqey.github.io/ib-doc/interfaces/HistogramEntry.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistogramData.getHistogramData-1)
- Get data histogram of specified contract.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




\[\[Contract\]\] object for which histogram is being requested

- ##### useRTH: boolean




Use regular trading hours only, `true` for yes or `false` for no.

- ##### duration: number




Period duration of which data is being requested

- ##### durationUnit: [DurationUnit](https://stoqey.github.io/ib-doc/enums/DurationUnit.html)




Duration unit of which data is being requested


#### Returns Promise< [HistogramEntry](https://stoqey.github.io/ib-doc/interfaces/HistogramEntry.html)\[\]>

### getHistoricalData [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getHistoricalData)

- getHistoricalData(contract, endDateTime, durationStr, barSizeSetting, whatToShow, useRTH, formatDate): Promise< [Bar](https://stoqey.github.io/ib-doc/interfaces/Bar.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalData.getHistoricalData-1)
- Get a contracts historical data.



When requesting historical data, a finishing time and date is required along with a duration string.
For example, having:



- endDateTime: 20130701 23:59:59 GMT
- durationStr: 3 D
will return three days of data counting backwards from July 1st 2013 at 23:59:59 GMT resulting in all the available bars of the last three days
until the date and time specified.

It is possible to specify a timezone optionally.

#### Parameters

- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The contract for which we want to retrieve the data.

- ##### endDateTime: string




Request's ending time with format yyyyMMdd HH:mm:ss {TMZ}.

- ##### durationStr: string




The amount of time for which the data needs to be retrieved:



- \[n\] S (seconds)
- \[n\] D (days)
- \[n\] W (weeks)
- \[n\] M (months)
- \[n\] Y (years)

- ##### barSizeSetting: [BarSizeSetting](https://stoqey.github.io/ib-doc/enums/BarSizeSetting.html)




the size of the bar:



- 1 secs
- 5 secs
- 15 secs
- 30 secs
- 1 min
- 2 mins
- 3 mins
- 5 mins
- 15 mins
- 30 mins
- 1 hour
- 1 day

- ##### whatToShow: [WhatToShow](https://stoqey.github.io/ib-doc/variables/WhatToShow-1.html)




the kind of information being retrieved:



- TRADES
- MIDPOINT
- BID
- ASK
- BID\_ASK
- HISTORICAL\_VOLATILITY
- OPTION\_IMPLIED\_VOLATILITY
- FEE\_RATE
- REBATE\_RATE

- ##### useRTH: number




Set to 0 to obtain the data which was also generated outside of the Regular Trading Hours, set to 1 to obtain only the RTH data

- ##### formatDate: number




Set to 1 to obtain the bars' time as yyyyMMdd HH:mm:ss, set to 2 to obtain it like system time format in seconds


#### Returns Promise< [Bar](https://stoqey.github.io/ib-doc/interfaces/Bar.html)\[\]>

#### See

[https://interactivebrokers.github.io/tws-api/historical\_bars.html](https://interactivebrokers.github.io/tws-api/historical_bars.html) for details.

### getHistoricalDataUpdates [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getHistoricalDataUpdates)

- getHistoricalDataUpdates(contract, barSizeSetting, whatToShow, formatDate): Observable< [Bar](https://stoqey.github.io/ib-doc/interfaces/Bar.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalDataUpdates.getHistoricalDataUpdates-1)
- Create a subscription to receive update on the most recent historical data bar of a contract.



Use [IBApiNext.getHistoricalData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalData) to receive history data and use this function if
you want to continue receiving real-time updates on most recent bar.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The contract for which we want to retrieve the data.

- ##### barSizeSetting: [BarSizeSetting](https://stoqey.github.io/ib-doc/enums/BarSizeSetting.html)




the size of the bar:



- 1 secs
- 5 secs
- 15 secs
- 30 secs
- 1 min
- 2 mins
- 3 mins
- 5 mins
- 15 mins
- 30 mins
- 1 hour
- 1 day

- ##### whatToShow: [WhatToShow](https://stoqey.github.io/ib-doc/variables/WhatToShow-1.html)




the kind of information being retrieved:



- TRADES
- MIDPOINT
- BID
- ASK
- BID\_ASK
- HISTORICAL\_VOLATILITY
- OPTION\_IMPLIED\_VOLATILITY
- FEE\_RATE
- REBATE\_RATE

- ##### formatDate: number




Set to 1 to obtain the bars' time as yyyyMMdd HH:mm:ss, set to 2 to obtain it like system time format in seconds


#### Returns Observable< [Bar](https://stoqey.github.io/ib-doc/interfaces/Bar.html) >

#### See

[https://interactivebrokers.github.io/tws-api/historical\_bars.html](https://interactivebrokers.github.io/tws-api/historical_bars.html) for details.

### getHistoricalTicksBidAsk [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getHistoricalTicksBidAsk)

- getHistoricalTicksBidAsk(contract, startDateTime, endDateTime, numberOfTicks, useRTH, ignoreSize): Observable< [HistoricalTickBidAsk](https://stoqey.github.io/ib-doc/interfaces/HistoricalTickBidAsk.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksBidAsk.getHistoricalTicksBidAsk-1)
- Create a subscription to receive historical bid and ask prices from Time&Sales data of an instrument.
The next callback will be invoked each time a new tick is received from TWS.
The complete callback will be invoked when all required ticks have been
received.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




\[\[Contract\]\] object that is subject of query

- ##### startDateTime: string




"20170701 12:01:00". Uses TWS timezone specified at login.

- ##### endDateTime: string




"20170701 13:01:00". In TWS timezone. Exactly one of start time and end time has to be defined.

- ##### numberOfTicks: number




Number of distinct data points. Max currently 1000 per request.

- ##### useRTH: number




Data from regular trading hours (1), or all available hours (0)

- ##### ignoreSize: boolean




A filter only used when the source price is Bid\_Ask


#### Returns Observable< [HistoricalTickBidAsk](https://stoqey.github.io/ib-doc/interfaces/HistoricalTickBidAsk.html)\[\]>

### getHistoricalTicksLast [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getHistoricalTicksLast)

- getHistoricalTicksLast(contract, startDateTime, endDateTime, numberOfTicks, useRTH): Observable< [HistoricalTickLast](https://stoqey.github.io/ib-doc/interfaces/HistoricalTickLast.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksLast.getHistoricalTicksLast-1)
- Create a subscription to receive historical last trade prices from Time&Sales data of an instrument.
The next callback will be invoked each time a new tick is received from TWS.
The complete callback will be invoked when all required ticks have been
received.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




\[\[Contract\]\] object that is subject of query

- ##### startDateTime: string




"20170701 12:01:00". Uses TWS timezone specified at login.

- ##### endDateTime: string




"20170701 13:01:00". In TWS timezone. Exactly one of start time and end time has to be defined.

- ##### numberOfTicks: number




Number of distinct data points. Max 1000 per request.

- ##### useRTH: number




Data from regular trading hours (1), or all available hours (0)


#### Returns Observable< [HistoricalTickLast](https://stoqey.github.io/ib-doc/interfaces/HistoricalTickLast.html)\[\]>

### getHistoricalTicksMid [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getHistoricalTicksMid)

- getHistoricalTicksMid(contract, startDateTime, endDateTime, numberOfTicks, useRTH): Observable< [HistoricalTick](https://stoqey.github.io/ib-doc/interfaces/HistoricalTick.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksMid.getHistoricalTicksMid-1)
- Create a subscription to receive historical mid prices from Time&Sales data of an instrument.
The next callback will be invoked each time a new tick is received from TWS.
The complete callback will be invoked when all required ticks have been
received.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




\[\[Contract\]\] object that is subject of query

- ##### startDateTime: string




"20170701 12:01:00". Uses TWS timezone specified at login.

- ##### endDateTime: string




"20170701 13:01:00". In TWS timezone. Exactly one of start time and end time has to be defined.

- ##### numberOfTicks: number




Number of distinct data points. Max currently 1000 per request.

- ##### useRTH: number




Data from regular trading hours (1), or all available hours (0)


#### Returns Observable< [HistoricalTick](https://stoqey.github.io/ib-doc/interfaces/HistoricalTick.html)\[\]>

### getManagedAccounts [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getManagedAccounts)

- getManagedAccounts(): Promise<string\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getManagedAccounts.getManagedAccounts-1)
- Get the accounts to which the logged user has access to.




#### Returns Promise<string\[\]>


### getMarketData [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getMarketData)

- getMarketData(contract, genericTickList, snapshot, regulatorySnapshot): Observable< [MarketDataUpdate](https://stoqey.github.io/ib-doc/types/MarketDataUpdate.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketData.getMarketData-1)
- Create a subscription to receive real time market data.
Returns market data for an instrument either in real time or 10-15 minutes delayed (depending on the market data type specified,
see \[\[setMarketDataType\]\]).
If you plan to use `getMarketData` with either `snapshot` or `regulatorySnapshot` set to `true`
then you should consider using `getMarketDataSingle` instead.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The \[\[Contract\]\] for which the data is being requested

- ##### genericTickList: string




comma separated ids of the available generic ticks:



- 100 Option Volume (currently for stocks)
- 101 Option Open Interest (currently for stocks)
- 104 Historical Volatility (currently for stocks)
- 105 Average Option Volume (currently for stocks)
- 106 Option Implied Volatility (currently for stocks)
- 162 Index Future Premium
- 165 Miscellaneous Stats
- 221 Mark Price (used in TWS P&L computations)
- 225 Auction values (volume, price and imbalance)
- 233 RTVolume - contains the last trade price, last trade size, last trade time, total volume, VWAP, and single trade flag.
- 236 Shortable
- 256 Inventory
- 258 Fundamental Ratios
- 411 Realtime Historical Volatility
- 456 IBDividends

- ##### snapshot: boolean




For users with corresponding real time market data subscriptions.
A `true` value will return a one-time snapshot, completing the Observable when finished, after 11s latest.
A `false` value will provide endless streaming data, never completing the Observable.

- ##### regulatorySnapshot: boolean




Snapshot for US stocks requests NBBO snapshots for users which have "US Securities Snapshot Bundle" subscription
but not corresponding Network A, B, or C subscription necessary for streaming \* market data.
One-time snapshot of current market price that will incur a fee of 1 cent to the account per snapshot.


#### Returns Observable< [MarketDataUpdate](https://stoqey.github.io/ib-doc/types/MarketDataUpdate.html) >

### getMarketDataSnapshot [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getMarketDataSnapshot)

- getMarketDataSnapshot(contract, genericTickList, regulatorySnapshot): Promise<MutableMarketData> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDataSnapshot.getMarketDataSnapshot-1)
- Fetch a snapshot of real time market data.
Returns market data for an instrument either in real time or 10-15 minutes delayed (depending on the market data type specified,
see \[\[setMarketDataType\]\]).
getMarketDataSingle will collect market data for a maximum of 11 seconds and then return the result.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The \[\[Contract\]\] for which the data is being requested

- ##### genericTickList: string




comma separated ids of the generic ticks
Look at getMarketData documentation for a list of available generic ticks.

- ##### regulatorySnapshot: boolean




Snapshot for US stocks requests NBBO snapshots for users which have "US Securities Snapshot Bundle" subscription
but not corresponding Network A, B, or C subscription necessary for streaming \* market data.
One-time snapshot of current market price that will incur a fee of 1 cent to the account per snapshot.


#### Returns Promise<MutableMarketData>

### getMarketDepth [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getMarketDepth)

- getMarketDepth(contract, numRows, isSmartDepth, mktDepthOptions?): Observable< [OrderBookUpdate](https://stoqey.github.io/ib-doc/types/OrderBookUpdate.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDepth.getMarketDepth-1)
- Requests the contract's market depth (order book).



This request must be direct-routed to an exchange and not smart-routed.



The number of simultaneous market depth requests allowed in an account is calculated based on a formula
that looks at an accounts equity, commissions, and quote booster packs.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The \[\[Contract\]\] for which the depth is being requested.

- ##### numRows: number




The number of rows on each side of the order book.

- ##### isSmartDepth: boolean




Flag indicates that this is smart depth request.

- ##### `Optional` mktDepthOptions: [TagValue](https://stoqey.github.io/ib-doc/interfaces/TagValue.html)\[\]




TODO document


#### Returns Observable< [OrderBookUpdate](https://stoqey.github.io/ib-doc/types/OrderBookUpdate.html) >

### getMarketDepthExchanges [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getMarketDepthExchanges)

- getMarketDepthExchanges(): Promise< [DepthMktDataDescription](https://stoqey.github.io/ib-doc/interfaces/DepthMktDataDescription.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDepthExchanges.getMarketDepthExchanges-1)
- Get venues for which market data is returned on getMarketDepthL2 (those with market makers).




#### Returns Promise< [DepthMktDataDescription](https://stoqey.github.io/ib-doc/interfaces/DepthMktDataDescription.html)\[\]>


### getMarketScanner [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getMarketScanner)

- getMarketScanner(scannerSubscription, scannerSubscriptionOptions?, scannerSubscriptionFilterOptions?): Observable< [MarketScannerUpdate](https://stoqey.github.io/ib-doc/types/MarketScannerUpdate.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketScanner.getMarketScanner-1)
- It returns an observable that will emit a list of scanner subscriptions.





#### Parameters



- ##### scannerSubscription: [ScannerSubscription](https://stoqey.github.io/ib-doc/interfaces/ScannerSubscription.html)




ScannerSubscription

- ##### `Optional` scannerSubscriptionOptions: [TagValue](https://stoqey.github.io/ib-doc/interfaces/TagValue.html)\[\]




An array of TagValue objects.

- ##### `Optional` scannerSubscriptionFilterOptions: [TagValue](https://stoqey.github.io/ib-doc/interfaces/TagValue.html)\[\]




An optional array of TagValue objects.


#### Returns Observable< [MarketScannerUpdate](https://stoqey.github.io/ib-doc/types/MarketScannerUpdate.html) >

An observable that will emit a list of items.

### getMatchingSymbols [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getMatchingSymbols)

- getMatchingSymbols(pattern): Promise< [ContractDescription](https://stoqey.github.io/ib-doc/interfaces/ContractDescription.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMatchingSymbols.getMatchingSymbols-1)
- Search contracts where name or symbol matches the given text pattern.





#### Parameters



- ##### pattern: string




Either start of ticker symbol or (for larger strings) company name.


#### Returns Promise< [ContractDescription](https://stoqey.github.io/ib-doc/interfaces/ContractDescription.html)\[\]>

### getNextValidOrderId [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getNextValidOrderId)

- getNextValidOrderId(): Promise<number> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getNextValidOrderId.getNextValidOrderId-1)
- Requests the next valid order ID at the current moment.




#### Returns Promise<number>


### getOpenOrders [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getOpenOrders)

- getOpenOrders(): Observable< [OpenOrdersUpdate](https://stoqey.github.io/ib-doc/types/OpenOrdersUpdate.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getOpenOrders.getOpenOrders-1)
- Requests all open orders placed by this specific API client (identified by the API client id).
For client ID 0, this will bind previous manual TWS orders.




#### Returns Observable< [OpenOrdersUpdate](https://stoqey.github.io/ib-doc/types/OpenOrdersUpdate.html) >


### getPnL [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getPnL)

- getPnL(account, model?): Observable< [PnL](https://stoqey.github.io/ib-doc/interfaces/PnL.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPnL.getPnL-1)
- Create a subscription to receive real time daily PnL and unrealized PnL updates.





#### Parameters



- ##### account: string




Account for which to receive PnL updates.

- ##### `Optional` model: string


#### Returns Observable< [PnL](https://stoqey.github.io/ib-doc/interfaces/PnL.html) >

### getPnLSingle [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getPnLSingle)

- getPnLSingle(account, modelCode, conId): Observable< [PnLSingle](https://stoqey.github.io/ib-doc/interfaces/PnLSingle.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPnLSingle.getPnLSingle-1)
- Create a subscription to receive real time updates for daily PnL of individual positions.





#### Parameters



- ##### account: string




Account in which position exists.

- ##### modelCode: string




Model in which position exists.

- ##### conId: number




Contract ID (conId) of contract to receive daily PnL updates for.


#### Returns Observable< [PnLSingle](https://stoqey.github.io/ib-doc/interfaces/PnLSingle.html) >

### getPositions [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getPositions)

- getPositions(): Observable< [AccountPositionsUpdate](https://stoqey.github.io/ib-doc/types/AccountPositionsUpdate.html) > [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPositions.getPositions-1)
- Create subscription to receive the positions on all accessible accounts.




#### Returns Observable< [AccountPositionsUpdate](https://stoqey.github.io/ib-doc/types/AccountPositionsUpdate.html) >


### getScannerParameters [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getScannerParameters)

- getScannerParameters(): Promise<string> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getScannerParameters.getScannerParameters-1)
- Requests an XML string that describes all possible scanner queries.




#### Returns Promise<string>


### getSecDefOptParams [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getSecDefOptParams)

- getSecDefOptParams(underlyingSymbol, futFopExchange, underlyingSecType, underlyingConId): Promise< [SecurityDefinitionOptionParameterType](https://stoqey.github.io/ib-doc/interfaces/SecurityDefinitionOptionParameterType.html)\[\]> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getSecDefOptParams.getSecDefOptParams-1)
- Requests security definition option parameters for viewing a contract's option chain.



This information will be emitted as securityDefinitionOptionParameter event.





#### Parameters



- ##### underlyingSymbol: string




The underlying symbol to query the available contracts.

- ##### futFopExchange: string




The exchange on which the returned options are trading. Can be set to the empty string "" for all exchanges.

- ##### underlyingSecType: [SecType](https://stoqey.github.io/ib-doc/enums/SecType.html)




The type of the underlying security, i.e. STK.

- ##### underlyingConId: number




the contract ID of the underlying security.


#### Returns Promise< [SecurityDefinitionOptionParameterType](https://stoqey.github.io/ib-doc/interfaces/SecurityDefinitionOptionParameterType.html)\[\]>

### getUserInfo [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#getUserInfo)

- getUserInfo(): Promise<string> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getUserInfo.getUserInfo-1)
- Get the user info of the logged user.




#### Returns Promise<string>


### `Private` insertAtMapIndex [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#insertAtMapIndex)

- insertAtMapIndex<T, R>(index, key, value, map): Map<T, R> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#insertAtMapIndex.insertAtMapIndex-1)
- #### Type Parameters



- #### T extends number

- #### R


#### Parameters

- ##### index: number

- ##### key: T

- ##### value: R

- ##### map: Map<T, R>


#### Returns Map<T, R>

### modifyOrder [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#modifyOrder)

- modifyOrder(id, contract, order): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#modifyOrder.modifyOrder-1)
- Places new order.





#### Parameters



- ##### id: number




The order's unique identifier.

- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The order's \[\[Contract\]\].

- ##### order: [Order](https://stoqey.github.io/ib-doc/interfaces/Order.html)




The \[\[Order\]\] object.


#### Returns void

### `Private` `Readonly` onAccountDownloadEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onAccountDownloadEnd)

- onAccountDownloadEnd(subscriptions, accountName): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountDownloadEnd.onAccountDownloadEnd-1)
- Response to API accountDownloadEnd control message.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [AccountUpdate](https://stoqey.github.io/ib-doc/interfaces/AccountUpdate.html) >>

- ##### accountName: string


#### Returns void

#### See

\[\[reqOpenOrders\]\]

### `Private` `Readonly` onAccountSummary [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onAccountSummary)

- onAccountSummary(subscriptions, reqId, account, tag, value, currency): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountSummary.onAccountSummary-1)
- accountSummary event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<MutableAccountSummaries>>

- ##### reqId: number

- ##### account: string

- ##### tag: string

- ##### value: string

- ##### currency: string


#### Returns void

### `Private` `Readonly` onAccountSummaryEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onAccountSummaryEnd)

- onAccountSummaryEnd(subscriptions, reqId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountSummaryEnd.onAccountSummaryEnd-1)
- accountSummaryEnd event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<MutableAccountSummaries>>

- ##### reqId: number


#### Returns void

### `Private` `Readonly` onComissionReport [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onComissionReport)

- onComissionReport(subscriptions, commissionReport): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onComissionReport.onComissionReport-1)
- comissionReport event handler.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [CommissionReport](https://stoqey.github.io/ib-doc/interfaces/CommissionReport.html)\[\]>>

- ##### commissionReport: [CommissionReport](https://stoqey.github.io/ib-doc/interfaces/CommissionReport.html)


#### Returns void

### `Private` `Readonly` onContractDetails [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onContractDetails)

- onContractDetails(subscriptions, reqId, details): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onContractDetails.onContractDetails-1)
- contractDetails event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [ContractDetails](https://stoqey.github.io/ib-doc/interfaces/ContractDetails.html)\[\]>>

- ##### reqId: number

- ##### details: [ContractDetails](https://stoqey.github.io/ib-doc/interfaces/ContractDetails.html)


#### Returns void

### `Private` `Readonly` onContractDetailsEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onContractDetailsEnd)

- onContractDetailsEnd(subscriptions, reqId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onContractDetailsEnd.onContractDetailsEnd-1)
- contractDetailsEnd event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [ContractDetails](https://stoqey.github.io/ib-doc/interfaces/ContractDetails.html)\[\]>>

- ##### reqId: number


#### Returns void

### `Private` `Readonly` onCurrentTime [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onCurrentTime)

- onCurrentTime(subscriptions, time): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onCurrentTime.onCurrentTime-1)
- currentTime event handler.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<number>>

- ##### time: number


#### Returns void

### `Private` `Readonly` onExecDetails [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onExecDetails)

- onExecDetails(subscriptions, reqId, contract, execution): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onExecDetails.onExecDetails-1)
- Ends the subscrition once all trades are recieved





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [ExecutionDetail](https://stoqey.github.io/ib-doc/interfaces/ExecutionDetail.html)\[\]>>

- ##### reqId: number

- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




Contract details that is used for order

- ##### execution: [Execution](https://stoqey.github.io/ib-doc/interfaces/Execution.html)




Execution details of an order


#### Returns void

### `Private` `Readonly` onExecDetailsEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onExecDetailsEnd)

- onExecDetailsEnd(subscriptions, reqId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onExecDetailsEnd.onExecDetailsEnd-1)
- Ends the subscrition once all trades are recieved





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [ExecutionDetail](https://stoqey.github.io/ib-doc/interfaces/ExecutionDetail.html)\[\] \| [CommissionReport](https://stoqey.github.io/ib-doc/interfaces/CommissionReport.html)\[\]>>

- ##### reqId: number


#### Returns void

### `Private` onHeadTimestamp [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onHeadTimestamp)

- onHeadTimestamp(subscriptions, reqId, headTimestamp): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHeadTimestamp.onHeadTimestamp-1)
- headTimestamp event handler.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<string>>

- ##### reqId: number

- ##### headTimestamp: string


#### Returns void

### `Private` `Readonly` onHistogramData [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onHistogramData)

- onHistogramData(subscriptions, reqId, data): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistogramData.onHistogramData-1)
- histogramData event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [HistogramEntry](https://stoqey.github.io/ib-doc/interfaces/HistogramEntry.html)\[\]>>

- ##### reqId: number

- ##### data: [HistogramEntry](https://stoqey.github.io/ib-doc/interfaces/HistogramEntry.html)\[\]


#### Returns void

### `Private` `Readonly` onHistoricalData [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onHistoricalData)

- onHistoricalData(subscriptions, reqId, time, open, high, low, close, volume, count, WAP): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalData.onHistoricalData-1)
- historicalData event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [Bar](https://stoqey.github.io/ib-doc/interfaces/Bar.html)\[\]>>

- ##### reqId: number

- ##### time: string

- ##### open: number

- ##### high: number

- ##### low: number

- ##### close: number

- ##### volume: number

- ##### count: number

- ##### WAP: number


#### Returns void

### `Private` `Readonly` onHistoricalDataUpdate [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onHistoricalDataUpdate)

- onHistoricalDataUpdate(subscriptions, reqId, time, open, high, low, close, volume, count, WAP): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalDataUpdate.onHistoricalDataUpdate-1)
- historicalDataUpdate event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [Bar](https://stoqey.github.io/ib-doc/interfaces/Bar.html) >>

- ##### reqId: number

- ##### time: string

- ##### open: number

- ##### high: number

- ##### low: number

- ##### close: number

- ##### volume: number

- ##### count: number

- ##### WAP: number


#### Returns void

### `Private` `Readonly` onHistoricalTicks [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onHistoricalTicks)

- onHistoricalTicks(subscriptions, reqId, ticks, done): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicks.onHistoricalTicks-1)
- historicalTicks event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [HistoricalTick](https://stoqey.github.io/ib-doc/interfaces/HistoricalTick.html)\[\]>>

- ##### reqId: number

- ##### ticks: [HistoricalTick](https://stoqey.github.io/ib-doc/interfaces/HistoricalTick.html)\[\]

- ##### done: boolean


#### Returns void

### `Private` `Readonly` onHistoricalTicksBidAsk [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onHistoricalTicksBidAsk)

- onHistoricalTicksBidAsk(subscriptions, reqId, ticks, done): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicksBidAsk.onHistoricalTicksBidAsk-1)
- historicalTicksBidAsk event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [HistoricalTickBidAsk](https://stoqey.github.io/ib-doc/interfaces/HistoricalTickBidAsk.html)\[\]>>

- ##### reqId: number

- ##### ticks: [HistoricalTickBidAsk](https://stoqey.github.io/ib-doc/interfaces/HistoricalTickBidAsk.html)\[\]

- ##### done: boolean


#### Returns void

### `Private` `Readonly` onHistoricalTicksLast [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onHistoricalTicksLast)

- onHistoricalTicksLast(subscriptions, reqId, ticks, done): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicksLast.onHistoricalTicksLast-1)
- historicalTicksLast event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [HistoricalTickLast](https://stoqey.github.io/ib-doc/interfaces/HistoricalTickLast.html)\[\]>>

- ##### reqId: number

- ##### ticks: [HistoricalTickLast](https://stoqey.github.io/ib-doc/interfaces/HistoricalTickLast.html)\[\]

- ##### done: boolean


#### Returns void

### `Private` onManagedAccts [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onManagedAccts)

- onManagedAccts(subscriptions, accountsList): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onManagedAccts.onManagedAccts-1)
- managedAccounts event handler.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<string\[\]>>

- ##### accountsList: string


#### Returns void

### `Private` `Readonly` onMktDepthExchanges [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onMktDepthExchanges)

- onMktDepthExchanges(subscriptions, depthMktDataDescriptions): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onMktDepthExchanges.onMktDepthExchanges-1)
- mktDepthExchanges event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [DepthMktDataDescription](https://stoqey.github.io/ib-doc/interfaces/DepthMktDataDescription.html)\[\]>>

- ##### depthMktDataDescriptions: [DepthMktDataDescription](https://stoqey.github.io/ib-doc/interfaces/DepthMktDataDescription.html)\[\]


#### Returns void

### `Private` `Readonly` onNextValidId [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onNextValidId)

- onNextValidId(subscriptions, orderId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onNextValidId.onNextValidId-1)
- nextValidId event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<number>>

- ##### orderId: number


#### Returns void

### `Private` `Readonly` onOpenOrder [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onOpenOrder)

- onOpenOrder(subscriptions, orderId, contract, order, orderState): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrder.onOpenOrder-1)
- Feeds in currently open orders.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [OpenOrder](https://stoqey.github.io/ib-doc/interfaces/OpenOrder.html)\[\]>>

- ##### orderId: number

- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)

- ##### order: [Order](https://stoqey.github.io/ib-doc/interfaces/Order.html)

- ##### orderState: [OrderState](https://stoqey.github.io/ib-doc/interfaces/OrderState.html)


#### Returns void

#### See

\[\[placeOrder\]\], \[\[reqAllOpenOrders\]\], \[\[reqAutoOpenOrders\]\]

### `Private` `Readonly` onOpenOrderComplete [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onOpenOrderComplete)

- onOpenOrderComplete(subscriptions): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrderComplete.onOpenOrderComplete-1)
- Ends the subscription once all openOrders are recieved





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [OpenOrder](https://stoqey.github.io/ib-doc/interfaces/OpenOrder.html)\[\]>>


#### Returns void

### `Private` `Readonly` onOpenOrderEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onOpenOrderEnd)

- onOpenOrderEnd(subscriptions): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrderEnd.onOpenOrderEnd-1)
- Ends the subscription once all openOrders are recieved





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [OpenOrder](https://stoqey.github.io/ib-doc/interfaces/OpenOrder.html)\[\]>>


#### Returns void

### `Private` `Readonly` onOrderBound [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onOrderBound)

- onOrderBound(subscriptions, orderId, apiClientId, apiOrderId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOrderBound.onOrderBound-1)
- Response to API bind order control message.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [OpenOrder](https://stoqey.github.io/ib-doc/interfaces/OpenOrder.html)\[\]>>

- ##### orderId: number

- ##### apiClientId: number

- ##### apiOrderId: number


#### Returns void

#### See

\[\[reqOpenOrders\]\]

### `Private` `Readonly` onOrderStatus [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onOrderStatus)

- onOrderStatus(subscriptions, orderId, status, filled, remaining, avgFillPrice, permId?, parentId?, lastFillPrice?, clientId?, whyHeld?, mktCapPrice?): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOrderStatus.onOrderStatus-1)
- Response to API status order control message.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [OpenOrder](https://stoqey.github.io/ib-doc/interfaces/OpenOrder.html)\[\]>>

- ##### orderId: number

- ##### status: [OrderStatus](https://stoqey.github.io/ib-doc/enums/OrderStatus.html)

- ##### filled: number

- ##### remaining: number

- ##### avgFillPrice: number

- ##### `Optional` permId: number

- ##### `Optional` parentId: number

- ##### `Optional` lastFillPrice: number

- ##### `Optional` clientId: number

- ##### `Optional` whyHeld: string

- ##### `Optional` mktCapPrice: number


#### Returns void

#### See

\[\[reqOpenOrders\]\]

### `Private` onPnL [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onPnL)

- onPnL(subscriptions, reqId, dailyPnL, unrealizedPnL?, realizedPnL?): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPnL.onPnL-1)
- pnl event handler.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [PnL](https://stoqey.github.io/ib-doc/interfaces/PnL.html) >>

- ##### reqId: number

- ##### dailyPnL: number

- ##### `Optional` unrealizedPnL: number

- ##### `Optional` realizedPnL: number


#### Returns void

### `Private` `Readonly` onPnLSingle [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onPnLSingle)

- onPnLSingle(subscriptions, reqId, pos, dailyPnL, unrealizedPnL, realizedPnL, value): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPnLSingle.onPnLSingle-1)
- pnlSingle event handler.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [PnLSingle](https://stoqey.github.io/ib-doc/interfaces/PnLSingle.html) >>

- ##### reqId: number

- ##### pos: number

- ##### dailyPnL: number

- ##### unrealizedPnL: number

- ##### realizedPnL: number

- ##### value: number


#### Returns void

### `Private` `Readonly` onPosition [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onPosition)

- onPosition(subscriptions, account, contract, pos, avgCost?): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPosition.onPosition-1)
- position event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<MutableAccountPositions>>

- ##### account: string

- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)

- ##### pos: number

- ##### `Optional` avgCost: number


#### Returns void

### `Private` `Readonly` onPositionEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onPositionEnd)

- onPositionEnd(subscriptions): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPositionEnd.onPositionEnd-1)
- position end enumeration event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<MutableAccountPositions>>


#### Returns void

### `Private` `Readonly` onScannerData [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onScannerData)

- onScannerData(subscriptions, reqId, rank, contract, distance, benchmark, projection, legStr): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerData.onScannerData-1)
- Provides the data resulting from the market scanner request.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [MarketScannerRows](https://stoqey.github.io/ib-doc/types/MarketScannerRows.html) >>

- ##### reqId: number




the request's identifier

- ##### rank: number




the ranking within the response of this bar.

- ##### contract: [ContractDetails](https://stoqey.github.io/ib-doc/interfaces/ContractDetails.html)




the data's ContractDetails

- ##### distance: string




according to query

- ##### benchmark: string




according to query

- ##### projection: string




according to query

- ##### legStr: string




describes the combo legs when the scanner is returning EFP


#### Returns void

void

### `Private` `Readonly` onScannerDataEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onScannerDataEnd)

- onScannerDataEnd(subscriptions, reqId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerDataEnd.onScannerDataEnd-1)
- Indicates the scanner data reception has terminated.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [MarketScannerRows](https://stoqey.github.io/ib-doc/types/MarketScannerRows.html) >>

- ##### reqId: number




the request's identifier


#### Returns void

### `Private` `Readonly` onScannerParameters [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onScannerParameters)

- onScannerParameters(subscriptions, xml): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerParameters.onScannerParameters-1)
- #### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<string>>

- ##### xml: string


#### Returns void

### `Private` `Readonly` onSecurityDefinitionOptionParameter [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onSecurityDefinitionOptionParameter)

- onSecurityDefinitionOptionParameter(subscriptions, reqId, exchange, underlyingConId, tradingClass, multiplier, expirations, strikes): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSecurityDefinitionOptionParameter.onSecurityDefinitionOptionParameter-1)
- securityDefinitionOptionParameter event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [SecurityDefinitionOptionParameterType](https://stoqey.github.io/ib-doc/interfaces/SecurityDefinitionOptionParameterType.html)\[\]>>

- ##### reqId: number

- ##### exchange: string

- ##### underlyingConId: number

- ##### tradingClass: string

- ##### multiplier: string

- ##### expirations: string\[\]

- ##### strikes: number\[\]


#### Returns void

### `Private` `Readonly` onSecurityDefinitionOptionParameterEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onSecurityDefinitionOptionParameterEnd)

- onSecurityDefinitionOptionParameterEnd(subscriptions, reqId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSecurityDefinitionOptionParameterEnd.onSecurityDefinitionOptionParameterEnd-1)
- securityDefinitionOptionParameterEnd event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [SecurityDefinitionOptionParameterType](https://stoqey.github.io/ib-doc/interfaces/SecurityDefinitionOptionParameterType.html)\[\]>>

- ##### reqId: number


#### Returns void

### `Private` `Readonly` onSymbolSamples [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onSymbolSamples)

- onSymbolSamples(subscriptions, reqId, contractDescriptions): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSymbolSamples.onSymbolSamples-1)
- symbolSamples event handler.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [ContractDescription](https://stoqey.github.io/ib-doc/interfaces/ContractDescription.html)\[\]>>

- ##### reqId: number

- ##### contractDescriptions: [ContractDescription](https://stoqey.github.io/ib-doc/interfaces/ContractDescription.html)\[\]


#### Returns void

### `Private` `Readonly` onTick [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onTick)

- onTick(subscriptions, reqId, tickType, value?): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTick.onTick-1)
- tickPrice, tickSize and tickGeneric event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<MutableMarketData>>

- ##### reqId: number

- ##### tickType: [IBApiTickType](https://stoqey.github.io/ib-doc/enums/IBApiTickType.html)

- ##### `Optional` value: number


#### Returns void

### `Private` `Readonly` onTickOptionComputation [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onTickOptionComputation)

- onTickOptionComputation(subscriptions, reqId, field, impliedVolatility, delta, optPrice, pvDividend, gamma, vega, theta, undPrice): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTickOptionComputation.onTickOptionComputation-1)
- tickOptionComputationHandler event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<MutableMarketData>>

- ##### reqId: number

- ##### field: number

- ##### impliedVolatility: number

- ##### delta: number

- ##### optPrice: number

- ##### pvDividend: number

- ##### gamma: number

- ##### vega: number

- ##### theta: number

- ##### undPrice: number


#### Returns void

### `Private` `Readonly` onTickSnapshotEnd [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onTickSnapshotEnd)

- onTickSnapshotEnd(subscriptions, reqId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTickSnapshotEnd.onTickSnapshotEnd-1)
- tickSnapshotEnd event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<MutableMarketData>>

- ##### reqId: number


#### Returns void

### `Private` `Readonly` onUpdateAccountTime [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onUpdateAccountTime)

- onUpdateAccountTime(subscriptions, timeStamp): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateAccountTime.onUpdateAccountTime-1)
- Response to API updateAccountTime control message.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [AccountUpdate](https://stoqey.github.io/ib-doc/interfaces/AccountUpdate.html) >>

- ##### timeStamp: string


#### Returns void

#### See

\[\[reqOpenOrders\]\]

### `Private` `Readonly` onUpdateAccountValue [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onUpdateAccountValue)

- onUpdateAccountValue(subscriptions, tag, value, currency, account): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateAccountValue.onUpdateAccountValue-1)
- Response to API updateAccountValue control message.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [AccountUpdate](https://stoqey.github.io/ib-doc/interfaces/AccountUpdate.html) >>

- ##### tag: string

- ##### value: string

- ##### currency: string

- ##### account: string


#### Returns void

#### See

\[\[reqOpenOrders\]\]

### `Private` `Readonly` onUpdateMktDepth [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onUpdateMktDepth)

- onUpdateMktDepth(subscriptions, reqId, position, operation, side, price, size): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateMktDepth.onUpdateMktDepth-1)
- updateMktDepth event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [OrderBook](https://stoqey.github.io/ib-doc/interfaces/OrderBook.html) >>

- ##### reqId: number

- ##### position: number

- ##### operation: number

- ##### side: number

- ##### price: number

- ##### size: number


#### Returns void

### `Private` `Readonly` onUpdateMktDepthL2 [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onUpdateMktDepthL2)

- onUpdateMktDepthL2(subscriptions, reqId, position, marketMaker, operation, side, price, size, isSmartDepth): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateMktDepthL2.onUpdateMktDepthL2-1)
- marketDepthL2 event handler





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [OrderBook](https://stoqey.github.io/ib-doc/interfaces/OrderBook.html) >>

- ##### reqId: number

- ##### position: number

- ##### marketMaker: string

- ##### operation: number

- ##### side: number

- ##### price: number

- ##### size: number

- ##### isSmartDepth: boolean


#### Returns void

### `Private` `Readonly` onUpdatePortfolio [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onUpdatePortfolio)

- onUpdatePortfolio(subscriptions, contract, pos, marketPrice, marketValue, avgCost, unrealizedPNL, realizedPNL, account): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdatePortfolio.onUpdatePortfolio-1)
- Response to API updatePortfolio control message.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription< [AccountUpdate](https://stoqey.github.io/ib-doc/interfaces/AccountUpdate.html) >>

- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)

- ##### pos: number

- ##### marketPrice: number

- ##### marketValue: number

- ##### avgCost: number

- ##### unrealizedPNL: number

- ##### realizedPNL: number

- ##### account: string


#### Returns void

#### See

\[\[reqOpenOrders\]\]

### `Private` `Readonly` onUserInfo [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#onUserInfo)

- onUserInfo(subscriptions, reqId, whiteBrandingId): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUserInfo.onUserInfo-1)
- userInfo event handler.





#### Parameters



- ##### subscriptions: Map<number, IBApiNextSubscription<string>>

- ##### reqId: number

- ##### whiteBrandingId: string


#### Returns void

### placeNewOrder [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#placeNewOrder)

- placeNewOrder(contract, order): Promise<number> [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#placeNewOrder.placeNewOrder-1)
- Places new order.
This method does use the order id as returned by getNextValidOrderId() method and returns it as a result.
If you want to send multiple orders, consider using placeOrder method instead and increase the order id manually for each new order, avoiding the overhead of calling getNextValidOrderId() for each.





#### Parameters



- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The order's \[\[Contract\]\].

- ##### order: [Order](https://stoqey.github.io/ib-doc/interfaces/Order.html)




The \[\[Order\]\] object.


#### Returns Promise<number>

#### See

\[\[getNextValidOrderId\]\]

### placeOrder [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#placeOrder)

- placeOrder(id, contract, order): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#placeOrder.placeOrder-1)
- Places or modifies an order.





#### Parameters



- ##### id: number




The order's unique identifier.
Use a sequential id starting with the id received at the nextValidId method.
If a new order is placed with an order ID less than or equal to the order ID of a previous order an error will occur.

- ##### contract: [Contract](https://stoqey.github.io/ib-doc/interfaces/Contract.html)




The order's \[\[Contract\]\].

- ##### order: [Order](https://stoqey.github.io/ib-doc/interfaces/Order.html)




The \[\[Order\]\] object.


#### Returns void

### setMarketDataType [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html\#setMarketDataType)

- setMarketDataType(type): void [Permalink](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#setMarketDataType.setMarketDataType-1)
- Switches data type returned from reqMktData request to "frozen", "delayed" or "delayed-frozen" market data.
Requires TWS/IBG v963+.



By default only real-time \[\[MarketDataType.REALTIME\]\] market data is enabled.



The API can receive frozen market data from Trader Workstation.
Frozen market data is the last data recorded in our system.
During normal trading hours, the API receives real-time market data.
Invoking this function with argument \[\[MarketDataType.FROZEN\]\] requests a switch to frozen data immediately or after the close.
When the market reopens, the market data type will automatically switch back to real time if available.





#### Parameters



- ##### type: [MarketDataType](https://stoqey.github.io/ib-doc/enums/MarketDataType.html)




The requested market data type.


#### Returns void

### Settings

#### Member Visibility

- Protected
- Private
- Inherited
- External

#### Theme

OSLightDark

### On This Page

- [constructor](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#constructor)
- [\_nextReqId](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#_nextReqId)
- [api](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#api)
- [errorSubject](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#errorSubject)
- [getMarketDataSingle](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDataSingle)
- [logger](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#logger)
- [searchContracts](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#searchContracts)
- [subscriptions](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#subscriptions)
- [connectionState](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#connectionState)
- [error](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#error)
- [isConnected](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#isConnected)
- [logLevel](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#logLevel)
- [cancelAllOrders](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#cancelAllOrders)
- [cancelOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#cancelOrder)
- [connect](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#connect)
- [disconnect](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#disconnect)
- [getAccountSummary](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAccountSummary)
- [getAccountUpdates](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAccountUpdates)
- [getAllOpenOrders](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAllOpenOrders)
- [getAutoOpenOrders](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getAutoOpenOrders)
- [getCommissionReport](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getCommissionReport)
- [getContractDetails](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getContractDetails)
- [getCurrentTime](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getCurrentTime)
- [getExecutionDetails](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getExecutionDetails)
- [getHeadTimestamp](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHeadTimestamp)
- [getHistogramData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistogramData)
- [getHistoricalData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalData)
- [getHistoricalDataUpdates](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalDataUpdates)
- [getHistoricalTicksBidAsk](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksBidAsk)
- [getHistoricalTicksLast](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksLast)
- [getHistoricalTicksMid](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getHistoricalTicksMid)
- [getManagedAccounts](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getManagedAccounts)
- [getMarketData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketData)
- [getMarketDataSnapshot](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDataSnapshot)
- [getMarketDepth](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDepth)
- [getMarketDepthExchanges](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketDepthExchanges)
- [getMarketScanner](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMarketScanner)
- [getMatchingSymbols](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getMatchingSymbols)
- [getNextValidOrderId](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getNextValidOrderId)
- [getOpenOrders](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getOpenOrders)
- [getPnL](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPnL)
- [getPnLSingle](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPnLSingle)
- [getPositions](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getPositions)
- [getScannerParameters](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getScannerParameters)
- [getSecDefOptParams](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getSecDefOptParams)
- [getUserInfo](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#getUserInfo)
- [insertAtMapIndex](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#insertAtMapIndex)
- [modifyOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#modifyOrder)
- [onAccountDownloadEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountDownloadEnd)
- [onAccountSummary](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountSummary)
- [onAccountSummaryEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onAccountSummaryEnd)
- [onComissionReport](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onComissionReport)
- [onContractDetails](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onContractDetails)
- [onContractDetailsEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onContractDetailsEnd)
- [onCurrentTime](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onCurrentTime)
- [onExecDetails](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onExecDetails)
- [onExecDetailsEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onExecDetailsEnd)
- [onHeadTimestamp](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHeadTimestamp)
- [onHistogramData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistogramData)
- [onHistoricalData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalData)
- [onHistoricalDataUpdate](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalDataUpdate)
- [onHistoricalTicks](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicks)
- [onHistoricalTicksBidAsk](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicksBidAsk)
- [onHistoricalTicksLast](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onHistoricalTicksLast)
- [onManagedAccts](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onManagedAccts)
- [onMktDepthExchanges](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onMktDepthExchanges)
- [onNextValidId](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onNextValidId)
- [onOpenOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrder)
- [onOpenOrderComplete](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrderComplete)
- [onOpenOrderEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOpenOrderEnd)
- [onOrderBound](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOrderBound)
- [onOrderStatus](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onOrderStatus)
- [onPnL](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPnL)
- [onPnLSingle](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPnLSingle)
- [onPosition](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPosition)
- [onPositionEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onPositionEnd)
- [onScannerData](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerData)
- [onScannerDataEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerDataEnd)
- [onScannerParameters](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onScannerParameters)
- [onSecurityDefinitionOptionParameter](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSecurityDefinitionOptionParameter)
- [onSecurityDefinitionOptionParameterEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSecurityDefinitionOptionParameterEnd)
- [onSymbolSamples](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onSymbolSamples)
- [onTick](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTick)
- [onTickOptionComputation](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTickOptionComputation)
- [onTickSnapshotEnd](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onTickSnapshotEnd)
- [onUpdateAccountTime](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateAccountTime)
- [onUpdateAccountValue](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateAccountValue)
- [onUpdateMktDepth](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateMktDepth)
- [onUpdateMktDepthL2](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdateMktDepthL2)
- [onUpdatePortfolio](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUpdatePortfolio)
- [onUserInfo](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#onUserInfo)
- [placeNewOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#placeNewOrder)
- [placeOrder](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#placeOrder)
- [setMarketDataType](https://stoqey.github.io/ib-doc/classes/IBApiNext.html#setMarketDataType)

Generated using [TypeDoc](https://typedoc.org/)
